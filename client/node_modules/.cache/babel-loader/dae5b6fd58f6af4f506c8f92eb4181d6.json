{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_FAIL, REGISTER_SUCCESS, USER_LOADED, AUTH_ERROR } from './types';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken'; // Load User \n\nexport const loadUser = () => async dispacth => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n}; //Registers user\n\nexport const Register = ({\n  name,\n  email,\n  password\n}) => async dispacth => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispacth({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.errors;\n\n    if (errors) {\n      errors.forEach(error => dispacth(setAlert(error.msg, 'danger')));\n    }\n\n    dispacth({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/rigocontreras/Documents/node_projects/developer_social_network/client/src/actions/auth.js"],"names":["axios","REGISTER_FAIL","REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","setAlert","setAuthToken","loadUser","dispacth","localStorage","token","Register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAsBC,gBAAtB,EAAuCC,WAAvC,EAAmDC,UAAnD,QAAoE,SAApE;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CACA;;AACA,OAAO,MAAOC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAgB;AAE9C,MAAGC,YAAY,CAACC,KAAhB,EAAsB;AACfJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACN;AAGD,CAPM,C,CAcP;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,KAAN;AAAYC,EAAAA;AAAZ,CAAD,KAA2B,MAAMN,QAAN,IAAiB;AAEhE,QAAMO,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAC;AACH,sBAAe;AADZ;AADC,GAAf;AAMC,QAAMC,IAAI,GAAKC,IAAI,CAACC,SAAL,CAAe;AAACP,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA;AAAZ,GAAf,CAAf;;AAEA,MAAG;AAEC,UAAMM,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAW,YAAX,EAAwBJ,IAAxB,EAA6BF,MAA7B,CAAlB;AACAP,IAAAA,QAAQ,CAAC;AACJc,MAAAA,IAAI,EAACpB,gBADD;AAEJqB,MAAAA,OAAO,EAACH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOC,OAAMC,GAAN,EAAU;AACJ,UAAMC,MAAM,GAAID,GAAG,CAACE,QAAJ,CAAaD,MAA7B;;AACA,QAAGA,MAAH,EAAU;AACLA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAGrB,QAAQ,CAC3BH,QAAQ,CAACwB,KAAK,CAACC,GAAP,EAAW,QAAX,CADmB,CAA/B;AAGJ;;AAELtB,IAAAA,QAAQ,CAAC;AACAc,MAAAA,IAAI,EAACrB;AADL,KAAD,CAAR;AAGF;AAEL,CA9BM","sourcesContent":["import axios from 'axios';\nimport {REGISTER_FAIL,REGISTER_SUCCESS,USER_LOADED,AUTH_ERROR} from './types';\nimport {setAlert} from './alert';\nimport setAuthToken from '../utils/setAuthToken'\n// Load User \nexport const  loadUser = () => async dispacth=>{\n\n if(localStorage.token){\n        setAuthToken(localStorage.token)\n }\n    \n\n}\n\n\n\n\n\n\n//Registers user\nexport const Register = ({name,email,password}) => async dispacth =>{\n     \n    const config  ={\n          headers:{\n               'Content-Type':'application/json'\n          }\n     }\n\n     const body  =  JSON.stringify({name,email,password})\n\n     try{   \n\n         const res = await axios.post('/api/users',body,config)\n         dispacth({\n              type:REGISTER_SUCCESS,\n              payload:res.data\n         })\n     }catch(err){\n            const errors =  err.response.errors\n            if(errors){\n                 errors.forEach(error=> dispacth(\n                     setAlert(error.msg,'danger')\n                 ))\n            }\n\n        dispacth({\n                 type:REGISTER_FAIL\n            })\n     }\n\n}"]},"metadata":{},"sourceType":"module"}